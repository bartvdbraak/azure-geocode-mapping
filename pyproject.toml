[tool.poetry]
name = "geomapper"
version = "0.1.0"
description = "A Python package to generate a mapping of Azure regions to its display names and geocodes."
authors = ["Bart van der Braak <bartvdbraak@gmail.com>"]
readme = "README.md"
license = "MIT"
repository = "https://github.com/bartvdbraak/azure-geocode-mapping"
keywords = ["azure", "regions", "geocodes", "bicep", "arm"]
packages = [{include = "geomapper", from = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
defusedxml = "^0.7.1"

[tool.poetry.scripts]
azure-geocode-mapping = "geomapper.mapping:init"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^7.3.1"
pytest-cov = "^4.0.0"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
ruff = "^0.0.265"
black = "^23.3.0"

[tool.ruff]
src = ["src", "tests"]
line-length = 88  # black default
select = [
    "E",    # pycodestyle (supersedes pep8)
    "W",    # pycodestyle warnings
    # "D",  # pydocstyle
    "F",    # pyflakes
    # "UP", # pyupgrade
    "S",    # flake8-bandit
    "B",    # flake8-bugbear
    "I",    # isort
    "N",    # pep8-naming
    # "ERA",# eradicate
    "C40",  # flake8-comprehensions
    "A",    # flake8-builtins
    "Q",    # flake8-quotes
    "YTT",  # flake8-2020
    # "ANN",# flake8-annotations
    "BLE",  # flake8-blind-except
    # "FBT",# flake8-boolean-trap
    "C90",  # mccabe
    "T10",  # flake8-debugger
    # "EM", # flake8-errmsg
    "ICN",  # flake8-import-conventions
    # "T20",# flake8-print
    # "RET",# flake8-return
    "SIM",  # flake8-simplify
    "TID",  # flake8-tidy-imports
    # "ARG",# flake8-unused-arguments
    "PD",   # pandas-vet
    "PGH",  # pygrep-hooks
    "PLC",  # pylint
    "PLE",  # pylint
    "PLR",  # pylint
    "PLW",  # pylint
    "RUF",  # ruff-specific rules
]
ignore = ["S101"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
